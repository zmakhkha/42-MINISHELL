pasing errors
-heredoc without delimiter
-dQ->dQ ; should be joined
- dup in redirection and pipe
-dQ->sQ ; exaption -> and joining



remove * from Tokens

l"s          "-al : haaaadi word w

\<< a << b  cat  > ooei << chda



//////////////////////////


ls "ls"
ech'o' 
ls | >out
<    

ls -la || command 1< in comm2 2>out comm 3 << hdoc : WORKING

ls < redin1 >redout1 <<hdoc1 >>append1 <<hdoc2 -la : WORKING


Still to remove leaks in error case
Double, Single, subshell cases

To be implemented;
+ synatx error :
+ red -> subshell
+ shebshell ->word
+ word ->subshell
(wc -l) <main.c && cat -e : correct but the bash hangs
(wc -l) <main.c  cat -e && : syntax error
>out (haha) : red -> subshell : error
SUBSHELL -> reddirection should be swapped
+ pipe or operaor in the begining or in the end : WORKING

+ (wc -l) <main.c  cat -e && : DONE
+ 1 | 2 ||| 3 :  DONE
+ 2 | && 1 : DONE
+ enter : DONE
+ ls1>out : DONE
+ () : DONE
+ ' | ' : DONE
+ 'ls | ' : DONE
+ (wc -l) <main.c && cat -e : DONE
+ (wc -l) <main.c  cat -e && : DONE
+ >out (haha) : red -> subshell : DONE
+ nswapiw wla la ????????????????????????????/

ast
+ c1 | c2 | c3 && c11 | c12 : fixed
+ c1 | c2 | c3 && c11 && gf : working
+ c1 | c2 | c3 && c11 | c12 | c13 : fixed
+ c1 | c12 && c13 : fixed
+ c1 | c2 | c3 && c11 && gf || final : working


expander stage

+ "$HOME" : working
+ "'$HOME'" : working
+ """"'$HOME'"""" : working
+ """""'$USER'" : WORKING


expader tests

+ ls *    : WORKING
+ m*c1    : WORKING
+ Ma*     : WORKING
+ *Ma     : WORKING
+ Ma*f*e  : WORKING

<<<>>>

heredoc extrem cases : 
<< hah : SEGV
> hahaha
> $HOME
> $HIHI $HOME
> ds
> a

<< B'A' WORKS

export 
sort export value
double quotes in export
SEGV  export a=
export a========ffgg : to handle


SHLVL=1
_=/usr/bin/env
bash-3.2$ unset PWD SHLVL _
bash-3.2$ env
_=/usr/bin/env
bash-3.2$ unset PWD        
bash-3.2$ unset _
bash-3.2$ env
_=/usr/bin/env
bash-3.2$ 

# // export var=jkjkj                 jkjkj         kjjkjk
echo $var 
echo "$var"


cd ccc  leaks


"$var1 $var2" : Does not woks
 "ls $HOME"
 

 ------------------------------------------
1 st cas
bash-3.2$ export a='$HOME     lala '
bash-3.2$ env | grep "a="
a=$HOME     lala 
bash-3.2$ echo a
a
bash-3.2$ echo $a
$HOME lala
bash-3.2$ echo "$a"
$HOME     lala 
-----------------------
bash-3.2$ export b="$HOME     lala "
bash-3.2$ echo $b
/Users/zmakhkha lala
bash-3.2$ echo "$b"
/Users/zmakhkha     lala 
bash-3.2$ echo '$b'
$b
bash-3.2$ echo $b
/Users/zmakhkha lala
bash-3.2$ 


export a=valid  b='valid valid 3atani' : passe
export a=valid  b='valid valid 3atani' : passe
bash-3.2$ export b="$HOME     lala " : passe


export a=valid  8b=invalid  c="valid     lalalalaa"

minishell $ echo $a $8b
minishell: 8b: command not found

ls -la | grep ".txt" | wc -l :: passe
cat file.txt | grep "keyword" | sort | uniq -c | awk '{print $2, $1}' :: passe
lsof / | awk '{ if($7 > 1048576) print $7/1048576 "MB" " " $9 " " $1 }' | sort -n -u | tail :: passe
ls -la | grep "main" && wc -l

------------
exit after ctrl + slash hangs until we tap enter



export

simple declaration
epxort b  =>  declare -x b
epxort c=  =>  declare -x c=""
epxort d=  =>  declare -x d=""
epxort ab="lala" => declare -x ab="lalala"
export ad+=dsf => declare -x ad="dsf" // ad does not exists before

redeclaration of the same variable

declare -x c=""  after export c => declare -x c=""
export ab="sfdsdfsdf" after declare -x ab="sfdsdfsdf"
export ab+=74586 after declare -x ab="sfdsdfsdf74586" //append mode

syntax
export av =dssddsds
bash: export: `=dssddsds': not a valid identifier
declare -x av : and av exists

export ab= dssddsds
declare -x ab=""
declare -x dssddsds

export asd += dfsgd
export: `+=': not a valid identifier
declare -x asd
declare -x dfsgd

quotes and spacing

bash-3.2$ export az="var1      $HOME     lala"
bash-3.2$ export | grep az
declare -x az="var1      /Users/zmakhkha     lala"

bash-3.2$ echo $az
var1 /Users/zmakhkha lala
bash-3.2$ echo "$az"
var1      /Users/zmakhkha     lala




+ export a=*.c && ls $a : not working
+ <main.c | >tmpl : does not create tmpl
+ <main.c << l wc -l : should read from the heredoc : solved
+ export a=*.c -> ls $a : unknown object leaks


+ export a=*.c -> ls $a : Fixed
+ ls $ : SEGV : Fixed
+ $ : object leaks : Fixed
+ $HOME--+$USR : leaks : Fixed
+ ls $ : wrong result : fixed


minishell $ ls > file1 > file2 < in > file3 > file4 | ls > file4 > file6 <in2 > file7 > file8
minish: moipneins:h :o poepne nf:a iolpeedn
 failed
minishell $ > s
minishell $ < in
minishell $ echo $?
$?
minishell $ 
